@model IEnumerable<CrossConvo.Models.Utilisateur>
@using Microsoft.AspNetCore.Identity

@inject SignInManager<Utilisateur> SignInManager
@inject UserManager<Utilisateur> UserManager
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/PageExplorer.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="~/css/home.css" asp-append-version="true" />
    <script src="~/js/switch_theme.js"></script>
    <title>Explorer Page</title>
</head>
<body>

    <form asp-controller="Home" asp-action="Search" method="POST">
        <input type="text" name="searchName" id="searchName" placeholder="Rechercher..." />
        <input type="submit" value="Rechercher" />
    </form>

    <div class="entity-container">
        @foreach (var user in Model)
        {
            <div class="entity-card">
                <strong>@Html.DisplayFor(modelItem => user.Nom) @Html.DisplayFor(modelItem => user.Prenom)</strong><br />
                <strong>@Html.DisplayFor(modelItem => user.Email)</strong>
                <form id="addFriendForm" method="post" action="/Home/AddFriend">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="userId" id="friendUserId" value="@user.Id" />
                    <div>
                        <button type="submit" class="fas fa-plus icon_ajout add-friend"></button>
                    </div>
                </form>

                @if (user.Posts != null && user.Posts.Any())
                {
                    <div class="post-container">
                        @foreach (var post in user.Posts)
                        {
                            <div class="post">
                                <strong>@Html.DisplayFor(modelItem => post.Title)</strong><br />
                                <strong>@Html.DisplayFor(modelItem => post.Contenu)</strong><br />
                                <strong>@Html.DisplayFor(modelItem => post.Utilisateur.Nom)</strong><br />
                                <strong>@Html.DisplayFor(modelItem => post.Utilisateur.Email)</strong><br />
                                <strong>Likes: @Html.DisplayFor(modelItem => post.Likes)</strong><br />

                                @if (SignInManager.IsSignedIn(User))
                                {
                                    <form id="likeForm_@post.PostId" method="post" action="@Url.Action("ToggleLike", "Home")">
                                        @if (post.LikedUserIds.Contains(user.Id))
                                        {
                                            <i class="far fa-heart icon11"></i>
                                            <input type="hidden" name="like" value="false" />
                                        }
                                        else
                                        {
                                            <i class="far fa-heart icon111"></i>
                                            <input type="hidden" name="like" value="true" />
                                        }

                                        <input type="hidden" name="postId" value="@post.PostId" />

                                        <button type="submit" class="btn btn-link">Like</button>
                                    </form>
                                }

                               
                                
                                </div>
                            
                        }
                    </div>
                }
                else
                {
                    <p>Cette utilisateur a 0 post.</p>
                }
            </div>
        }
    </div>

    <script src="~/js/lightbox-plus-jquery.js"></script>
    <script>
        $(".add-friend").click(function () {
            var userId = $(this).data("user-id");

            $.ajax({
                url: "/Home/AddFriend",
                type: "POST",
                data: { userId: userId },
                success: function (result) {
                    if (result.success) {
                        console.log("Ami bien ajouté");
                    } else {
                        console.error("Erreur pendant l'ajout d'ami: " + result.error);
                    }
                },
                error: function () {
                    console.error("An error occurred during the AJAX request");
                }
            });
        });

        function validateCommentForm() {
            var commentContent = document.getElementById("contenuCommentaire").value.trim();
            var errorElement = document.getElementById("commentError");

            if (commentContent === "") {
                errorElement.innerText = "Commentaire peut pas être vite.";
                return false;
            } else {
                errorElement.innerText = "";
            }
            return true;
        }

        $(document).ready(function () {
            $(".view-comments-btn").click(function () {
                var postId = $(this).data("post-id");
                var commentContainer = $("#comment-container-" + postId);

                // Toggle the visibility of the comments container
                commentContainer.slideToggle();
            });
        });
    </script>
</body>
</html>